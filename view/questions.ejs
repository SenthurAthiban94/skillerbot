
<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<link rel="icon" type="image/png" href="assets/img/favicon.ico" />

	<title>SkillerBot | Profile</title>

	<!-- Canonical SEO -->
    <link rel="canonical" href="https://skillerbot.herokuapp.com"/>
    <meta name="keywords" content="wizard, bootstrap wizard, creative tim, long forms, 3 step wizard, sign up wizard, beautful wizard, long forms wizard, wizad with validation">
    <meta name="description" content="Fully responsive wizard that comes with 3 useful examples and 5 bright colors. The Bootstrap Wizard is one of the most handy elements that can be used inside a project.">

    <!-- Schema.org markup for Google+ -->
    <meta itemprop="name" content="">
    <meta itemprop="description" content="">
    <meta itemprop="image" content="">

    <!-- Twitter Card data -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@creativetim">
    <meta name="twitter:title" content="Bootstrap Wizard by Creative Tim">
    <meta name="twitter:description" content="Fully responsive wizard that comes with 3 useful examples and 5 bright colors. The Bootstrap Wizard is one of the most handy elements that can be used inside a project.">
    <meta name="twitter:creator" content="@creativetim">
    <meta name="twitter:image" content="https://s3.amazonaws.com/creativetim_bucket/products/22/opt_wizard_thumbnail.jpg">

    <!-- Open Graph data -->
    <meta property="og:title" content="Bootstrap Wizard by Creative Tim" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://demos.creative-tim.com/wizard-demo-register" />
    <meta property="og:image" content="https://s3.amazonaws.com/creativetim_bucket/products/22/opt_wizard_thumbnail.jpg" />
    <meta property="og:description" content="Fully responsive wizard that comes with 3 useful examples and 5 bright colors. The Bootstrap Wizard is one of the most handy elements that can be used inside a project." />
    <meta property="og:site_name" content="Creative Tim" />
	<meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />   

    <link href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.10/semantic.min.css" rel="stylesheet" />
    <link href="/css/questions/bootstrap.min.css" rel="stylesheet" />
    <link href="/css/questions/gsdk-base.css" rel="stylesheet" />
    <link href="https://netdna.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.css" rel="stylesheet">
    <style>
            .picture-container:hover{
                cursor: default;
            }
            .ui.form{
                font-size:1.5rem;
            }
            .dropdown > label[id*="-error"]{
                position: absolute !important;
                margin-top:10px !important;
            }
            .wizard-header > .margin-vertical-10{
                margin:10px 0;
            }
    </style>
    <script src="/libs/js/jquery.min.js" type="text/javascript"></script>
    <script>
        let domstructure=[];
        let questions=<%- typeof questions !== 'undefined' ? JSON.stringify(questions) : {}%>;
        let existing_answers=<%-typeof previousdata !== 'undefined' ? JSON.stringify(previousdata) : "''" %>;
        let section_maxlimit=Math.ceil(Object.keys(questions).length/3);
        let answers={},sectionlist={},counter=0;
        var totalquestions = Object.keys(questions);
        var lastKey = totalquestions.slice(-1)[0];
        totalquestions.map((e,v)=>{
            counter++;
            if(counter<=section_maxlimit){
                    sectionlist[e]=questions[e];
                    if(counter==section_maxlimit || counter==Object.keys(questions).length || e==lastKey){
                        domstructure.push(sectionlist);
                        counter=0;
                        sectionlist={};
                    }
            }
        });


    </script>
</head>
	<body>
		<%- include header.ejs %>
<div class="image-container set-full-height" style="background-image: url('/assets/img/backgrounds/wizard.jpg')">
    <!--   Big container   -->
    <div class="container">
	<div class="row">
        <div class="col-sm-8 col-sm-offset-2">
            <!--      Wizard container        -->
            <div class="wizard-container">
                <div class="card wizard-card ct-wizard-orange" id="wizard">
                    <form id="questions" class="ui form">
                <!--        You can switch "ct-wizard-orange"  with one of the next bright colors: "ct-wizard-blue", "ct-wizard-green", "ct-wizard-orange", "ct-wizard-red"             -->
                    	<div class="wizard-header">
							<h3 class="margin-vertical-10">
                        	   <b>BUILD</b> YOUR PROFILE <br>
                        	   <small>This information will let us know more about you.</small>
                        	</h3>
                    	</div>
                    	<ul>
                            <li><a href="#about" data-toggle="tab"><strong>Step 1</strong></a></li>
                            <li><a href="#account" data-toggle="tab"><strong>Step 2</strong></a></li>
                            <li><a href="#address" data-toggle="tab"><strong>Step 3</strong></a></li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane" id="about">
                              <div class="row">
                                  <!-- <h4 class="info-text"> Let's start with the basic information (with validation)</h4> -->
                                  <div class="col-sm-10 col-sm-offset-1">
                                     <div class="picture-container">
                                          <div class="picture">
                                              <img src="<%=userdata.image_path%>" class="picture-src" id="wizardPicturePreview" title=""/>
                                              <!-- <input type="file" id="wizard-picture"> -->
                                          </div>
                                          <h6><%=userdata.user_name%></h6>
                                      </div>
                                  </div>
                                  <div class="content1"></div>
                              </div>
                            </div>
                            <div class="tab-pane" id="account">
                                <!-- <h4 class="info-text"> What are you doing? </h4> -->
                                <div class="row">
                                    <div class="content2"></div>
                                </div>
                            </div>
                            <div class="tab-pane" id="address">
                                <div class="row">
                                    <div class="content3"></div>   
                                </div>
                            </div>
                        </div>
                        <div class="wizard-footer">
                            <div class="pull-right">
                                <input type='button' class='btn btn-next btn-fill btn-warning btn-wd btn-sm' name='next' value='Next' />
                                <input type='button' class='btn btn-finish btn-fill btn-warning btn-wd btn-sm' onclick="submitquestions()" name='finish' value='Finish' />
                            </div>
                            <div class="pull-left">
                                <input type='button' class='btn btn-previous btn-fill btn-default btn-wd btn-sm' name='previous' value='Previous' />
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    </form>
                </div>

            </div> <!-- wizard container -->
        </div>
        </div><!-- end row -->
    </div> <!--  big container -->
</div>
</body>
<!--  More information about jquery.validate here: https://jqueryvalidation.org/	 -->
<script src="/js/questions/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.10/semantic.js" type="text/javascript"></script>
<!-- GOOGLE MAP Address Fetching API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDRSMN76wNeDZnCMwnxYlPMjFV_YmKMIWY&libraries=places"></script>
<script>
        $("#questions").validate();
        // Custom Validations///////////////////////////////////////////////////
        jQuery.validator.addMethod("phonenumber", function(value, element) {
            return this.optional(element) || /^([0|\+[0-9]{1,5})?([7-9][0-9]{9})$/i.test(value);
        }, "* Please enter a valid Mobile number");
        jQuery.validator.addMethod('selectcheck', function (value) {
            return (value != '0');
        }, "* This field is required");
        jQuery.validator.addMethod("lettersonly", function(value, element) {
            return this.optional(element) || /^[a-zA-Z0-9\/\-.:@_ ]+$/i.test(value);
        }, "Invalid Characters!");
        //////////////////////////////////////////////////////////////////////


        let rulelist={};
        domstructure.map((e,v)=>{
            let container=$('.content'+(v+1));
            let input="";
            Object.keys(e).map((ie,iv)=>{
                answers[ie]="";
                var rules={};
                    rules.messages={};
                    if(e[ie]['required']){
                        rules.required=true;
                        rules.messages.required=e[ie]['type']==="date" ? "* Valid date is required!" : "* This field is required!";
                    }

                switch(e[ie]['type']){
                    case "radio":
                            // rulelist[ie]=rules;
                            // input+="<div class='col-sm-10 col-sm-offset-1'>";
                            // for(key in e[ie]['options']){
                            //     input +="<div class='form-group'>\
                            //                     <input id='"+ie+"' name='"+e[ie]['name']+"' type='"+e[ie]['type']+"' "+(Object.keys([ie]['options'][key]).includes(['checked']) && [ie]['options'][key]["checked"] ? 'checked' : '')+" class='form-control'/> "+e[ie]['options'][key]['name']+"\
                            //             </div>";
                            // }
                            // input+="</div>";
                        break;
                    case "text":
                            if(e[ie]['name']!=="geo_address"){
                                rules.lettersonly=true;
                            }
                            if(e[ie]['minlength']){
                                rules.minlength=e[ie]['minlength'];
                                rules.messages.minlength=jQuery.validator.format("Please Enter atleast {0} characters");
                            }
                            if(e[ie]['maxlength']){
                                rules.maxlength=e[ie]['maxlength'];
                                rules.messages.maxlength=jQuery.validator.format("Please Enter only {0} characters");
                            }
                            rulelist[ie]=rules;
                            input+="<div class='col-sm-10 col-sm-offset-1'>\
                                        <div class='form-group'>\
                                            <label>"+e[ie]['q']+" <small>(required)</small></label>\
                                            <input id='"+ie+"' name='"+e[ie]['name']+"' onfocus='"+(e[ie]['name']=="geo_address" ? 'getAutoCompleteAddress(this)' : '')+"' type='"+e[ie]['type']+"' class='form-control' placeholder='"+e[ie]['placeholder']+"'/>\
                                        </div>\
                                    </div>";
                        break;
                    case "textarea":
                            if(e[ie]['minlength']){
                                rules.minlength=e[ie]['minlength'];
                                rules.messages.minlength=jQuery.validator.format("Please Enter atleast {0} characters");
                            }
                            if(e[ie]['maxlength']){
                                rules.maxlength=e[ie]['maxlength'];
                                rules.messages.maxlength=jQuery.validator.format("Please Enter only {0} characters");
                            }
                            rulelist[ie]=rules;
                            input+="<div class='col-sm-10 col-sm-offset-1'>\
                                        <div class='form-group'>\
                                            <label>"+e[ie]['q']+" <small>(required)</small></label>\
                                            <textarea  id='"+ie+"' name='"+e[ie]['name']+"' class='form-control' name='"+ie+"' style='height:150px;max-height:150px;max-width:100%;min-width:100%;' placeholder='"+(Object.keys(e[ie]).includes('placeholder') ? e[ie]['placeholder'] : "")+"'></textarea>\
                                        </div>\
                                    </div>";
                        break;
                    case "date":
                            rulelist[ie]=rules;
                            input+="<div class='col-sm-10 col-sm-offset-1'>\
                                        <div class='form-group'>\
                                            <label>"+e[ie]['q']+" <small>(required)</small></label>\
                                            <input id='"+ie+"' name='"+e[ie]['name']+"' type='"+e[ie]['type']+"' class='form-control' min='"+((e[ie]['min-date'] && e[ie]['min-date'].length>1) ? e[ie]['min-date'] : getMinDate())+"' max='"+((e[ie]['max-date'] && e[ie]['max-date'].length>1) ? e[ie]['max-date'] : getMaxDate())+"' placeholder='"+e[ie]['placeholder']+"'/>\
                                        </div>\
                                    </div>";
                        break;
                    case "number":
                            if(e[ie]["name"]=="mobile"){
                                rules.phonenumber=true;
                            }
                            rulelist[ie]=rules;
                            input+="<div class='col-sm-10 col-sm-offset-1'>\
                                        <div class='form-group'>\
                                            <label>"+e[ie]['q']+" <small>(required)</small></label>\
                                            <input id='"+ie+"' name='"+e[ie]['name']+"' type='"+e[ie]['type']+"' class='form-control' "+((e[ie]['min'] && e[ie]['min'].length>0) ? "min='"+e[ie]['min']+"'" : "min='0'")+"  "+(Object.keys(e[ie]).includes('max') ? "onkeydown='preventMaxTyping("+e[ie].max+",this,event)'" : '')+"  placeholder='"+(Object.keys(e[ie]).includes('placeholder') ? e[ie]['placeholder'] : "")+"' required />\
                                        </div>\
                                    </div>";
                        break;
                    case "select":
                        rules.selectcheck=true;
                        rulelist[ie]=rules;
                        var options="";
                        for(key in e[ie]['options']){
                            options+="<option value='"+e[ie]['options'][key]['value']+"' >"+e[ie]['options'][key]['name']+"</option>";
                        }
                        input+="<div class='col-sm-10 col-sm-offset-1'>\
                                    <div class='form-group'>\
                                        <label>"+e[ie]["q"]+" <small>(required)</small></label>\
                                        <select class='form-control' id='"+ie+"' name='"+e[ie]['name']+"' required >\
                                        <option value='0'>Select</option>\
                                        "+options+"</select>\
                                    </div>\
                                </div>";
                        break;
                    case "multiselect":
                        rulelist[ie]=rules;
                        var options="";
                        for(key in e[ie]['options']){
                            options+="<option "+((existing_answers && existing_answers[0][ie] && existing_answers[0][ie].includes(e[ie]['options'][key]['value'])) ? "selected" : "")+" value='"+e[ie]['options'][key]['value']+"'>"+e[ie]['options'][key]['name']+"</option>";
                        }
                        input+='<div class="col-sm-10 col-sm-offset-1">\
                                    <div class="form-group multiselect-container">\
                                        <label>'+e[ie]["q"]+' <small>(required)</small></label>\
                                        <select id="'+ie+'" onchange="multiselectchange(this.id,this.name)" name="'+e[ie]['name']+'" class="ui fluid search dropdown multiselect" multiple="" required >\
                                            <option value="">'+e[ie]['name']+'</option>\
                                            '+options+'\
                                        </select>\
                                    </div>\
                                </div>';
                        break;
                }
            });
            container.html(input);
            $('.ui.dropdown').dropdown();
            var multiselect_found=Object.keys(e).filter((ie,ev)=>{ return (e[ie].type===("multiselect"))});
            if(multiselect_found.length){
                $('.search.dropdown > input.search').css('width','100%');
                if(!existing_answers){
                    $('.search.dropdown > input.search').attr('name',e[multiselect_found]['name']);
                }
            }
        });
        
        function multiselectchange(id,name){
            let values=$('#'+id).val();
            if(values && values.length){
                $('#'+id)[0].parentElement.getElementsByTagName('input')[0].name="";
                $('#'+name+"-error").hide();
            }else{
                $('.search.dropdown > input.search').css('width','100%');
                $('.search.dropdown > input.search').attr('name',name);
            }
        }
        
        function getMinDate(){
            var today = new Date();
            var dd = today.getDate(),
                mm = (today.getMonth()+1); //January is 0!
            if(dd<10){
                dd='0'+dd
            } 
            if(mm<10){
                mm='0'+mm
            } 
            mindate = 1800+'-'+mm+'-'+dd;
            return mindate;
        }

        function getMaxDate(){
            var today = new Date();
            var dd = today.getDate(),
                mm = (today.getMonth()+1), //January is 0!
                yyyy = today.getFullYear();
            if(dd<10){
                    dd='0'+dd
                } 
                if(mm<10){
                    mm='0'+mm
                } 

            today = yyyy+'-'+mm+'-'+dd;
            return today;
        }
        
        // Input Validations
        function validateMobile(number){
            var phoneno = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
            if(number.match(phoneno)){
                return true;
            }
            else{
                return false;
            }
        }
        function preventMaxTyping(maxlength,element,event){
            setTimeout(() => {
                if (element.value > maxlength && event.keyCode !== 46 && event.keyCode !== 8){event.preventDefault();element.value=parseInt(element.value.toString().slice(0,-1));}
            }, 100);
        }
        function submitquestions(){
            if($('#questions').valid()) {
                let questions_data={};
                Object.keys(answers).map((e)=>{
                    questions_data[e]=(e=="geo_address") ? answers[e] : $('#'+e).val();
                });
                $.ajax({
                    type: "POST",
                    url: '/profile/answers',
                    data: {
                            id : "<%=userdata._id%>",
                            role : "<%=userdata.role%>",
                            questions_response : JSON.stringify(questions_data)
                    },
                    dataType: 'json',
                    success : function(data){
                        if(data.redirect_url && data.redirect_url.length > 0){
                            window.location.href=data.redirect_url;
                        }else{
                            showNotification("danger","Something Went Wrong","Please Try Again Later...",1);    
                        }
                    },
                    error : function(e){
                        showNotification("danger","Something Went Wrong","Please Try Again Later...",1);
                        // if(data.redirect_url && data.redirect_url.length > 0){
                        //     window.location=data.redirect_url;
                        // }
                    }
                });
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///  GOOGLE MAP Address Fetching API
            function getAutoCompleteAddress(input) {
                var autocomplete=new google.maps.places.Autocomplete(input);
                google.maps.event.addDomListener(input, 'keydown', function(event) { 
                    if (event.keyCode === 13) { 
                        event.preventDefault(); 
                    }
                });

                google.maps.event.addDomListener(autocomplete, 'place_changed', function(event) { 
                    var place = autocomplete.getPlace();
                    answers[input.id]=input.value;
                    if(!Object.keys(place).includes('geometry') || !Object.keys(place.geometry).includes('location')){
                        input.value="";
                    }else{
                        answers[input.name]={
                                            "lat" : (Object.keys(place).includes('geometry') && Object.keys(place.geometry).includes('location')) ? place.geometry.location.lat() : "",
                                            "lng" : (Object.keys(place).includes('geometry') && Object.keys(place.geometry).includes('location')) ? place.geometry.location.lng() : ""
                                        };
                    }
                }); 
            }
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        Object.keys(rulelist).map((e)=>{
            $("#"+e).rules('add',rulelist[e]);
        });
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        function autopopulate(){
            if(existing_answers && existing_answers.length>0){
                Object.keys(existing_answers[0]).map((e,v)=>{
                    if(e!=="geo_address"){
                        $('#'+e).val(existing_answers[0][e]);
                    }
                });
            }
        }
        autopopulate();
</script>
	<script src="/libs/js/bootstrap.min.js" type="text/javascript"></script>
	<!--   plugins 	 -->
	<script src="/js/questions/jquery.bootstrap.wizard.js" type="text/javascript"></script>
	<script src="/js/questions/wizard.js"></script>
</html>
